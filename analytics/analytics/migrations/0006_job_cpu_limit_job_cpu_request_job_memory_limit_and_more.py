# Generated by Django 4.2.4 on 2024-01-10 18:14

from datetime import timedelta

from django.db import migrations, models
from django.db.models import functions


def transfer_duration(apps, schema_editor):
    Job = apps.get_model("analytics", "Job")
    Job.objects.all().update(
        new_duration=functions.Cast(
            functions.Concat(models.F("duration"), models.Value(" seconds")),
            output_field=models.DurationField(),
        )
    )


class Migration(migrations.Migration):
    dependencies = [
        ("analytics", "0005_alter_job_aws"),
    ]

    operations = [
        migrations.AddField(
            model_name="job",
            name="cpu_limit",
            field=models.FloatField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="job",
            name="cpu_request",
            field=models.FloatField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="job",
            name="memory_limit",
            field=models.PositiveBigIntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="job",
            name="memory_request",
            field=models.PositiveBigIntegerField(default=None, null=True),
        ),
        # 1. Add the new_duration field, that stores an interval type
        # 2. Cast the original data in durations from a float (representing seconds) to an interval
        # 3. Delete the old duration float field
        # 4. Rename the new_duration field to duration
        migrations.AddField(
            model_name="job",
            name="new_duration",
            field=models.DurationField(default=timedelta),
            preserve_default=False,
        ),
        migrations.RunPython(transfer_duration),
        migrations.RemoveField(
            model_name="job",
            name="duration",
        ),
        migrations.RenameField(
            model_name="job",
            old_name="new_duration",
            new_name="duration",
        ),
        # Continue with normal migration steps
        migrations.AddField(
            model_name="job",
            name="node_capacity_type",
            field=models.CharField(
                choices=[("spot", "Spot"), ("on-demand", "On Demand")],
                default=None,
                max_length=12,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="node_cpu",
            field=models.PositiveIntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="job",
            name="node_instance_type",
            field=models.CharField(default=None, max_length=32, null=True),
        ),
        migrations.AddField(
            model_name="job",
            name="node_instance_type_spot_price",
            field=models.FloatField(
                default=None,
                help_text="The price per hour (in USD) of the spot instnce this job ran on, at the time of running. If ever the job runs on an on-demand node, this field will be null.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="node_memory",
            field=models.PositiveIntegerField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="job",
            name="node_name",
            field=models.CharField(default=None, max_length=64, null=True),
        ),
        migrations.AddField(
            model_name="job",
            name="node_system_uuid",
            field=models.UUIDField(default=None, null=True),
        ),
        migrations.AddConstraint(
            model_name="job",
            constraint=models.UniqueConstraint(
                fields=("project_id", "job_id"), name="unique-project-job-id"
            ),
        ),
        migrations.AddConstraint(
            model_name="job",
            constraint=models.CheckConstraint(
                check=models.Q(("package_name", ""), _negated=True),
                name="non-empty-package-name",
            ),
        ),
    ]
